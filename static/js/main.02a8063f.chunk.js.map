{"version":3,"sources":["components/UI/Card.js","components/Filter/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onSaveSelectedYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","Chartbar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","item","filter","toString","enteredSelectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02a8063f.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = `card ` + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","// ExpenseFilter component for selecting the year.\r\n\r\nimport React from \"react\";\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const filterChangeHandler = (event) => {\r\n    props.onSaveSelectedYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label className=\"expenses-filter\">Filter by year</label>\r\n        <select value={props.selected} onChange={filterChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","//ExpenseDate component for getting the date\r\n\r\nimport React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(`en-US`, { month: `long` });\r\n  const day = props.date.toLocaleString(`en-US`, { day: `2-digit` });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","// ExpenseItem getting the full item with props including Date, Title, Amount\r\n\r\nimport React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","// ExpensesList component for the List logic\r\n\r\nimport React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  // Outputting conditional content\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\n// Filling the ChartBar using the value relation to the maxValue\r\nconst Chartbar = (props) => {\r\n  let barFillHeight = `0%`;\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + `%`;\r\n  }\r\n\r\n  // Setting the style prop of an element dynamically, by passing an object inside the\r\n  // style prop in the element/div.\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chartbar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\n//rendering the ChartBars dynamically, mapping the dataPoints as props so ChartBar\r\n//components are created paralel to the number od dataPoints.\r\n\r\nconst Chart = (props) => {\r\n  // calculating the maxValue\r\n\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: `Jan`, value: 0 },\r\n    { label: `Feb`, value: 0 },\r\n    { label: `Mar`, value: 0 },\r\n    { label: `Apr`, value: 0 },\r\n    { label: `May`, value: 0 },\r\n    { label: `Jun`, value: 0 },\r\n    { label: `Jul`, value: 0 },\r\n    { label: `Aug`, value: 0 },\r\n    { label: `Sep`, value: 0 },\r\n    { label: `Oct`, value: 0 },\r\n    { label: `Nov`, value: 0 },\r\n    { label: `Dec`, value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../Filter/ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(`2021`);\r\n\r\n  const saveSelectedYear = (enteredSelectedYear) => {\r\n    setFilteredYear(enteredSelectedYear);\r\n  };\r\n\r\n  // using .filter method with passed fucntion (expense =>{}) to check true or false\r\n  //  and return it as a string. And then filteredExpenses is mapped and rendered.\r\n  const filteredExpenses = props.item.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  //props.item = All Expenses\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onSaveSelectedYear={saveSelectedYear}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","// ExpenseForm component is data from the user input field using eventHandlers\r\n// and EventListeners.\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(``);\r\n  const [enteredAmount, setEnteredAmount] = useState(``);\r\n  const [enteredDate, setEnteredDate] = useState(``);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(``);\r\n    setEnteredAmount(``);\r\n    setEnteredDate(``);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"Date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2025-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","// NewExpense component getting the new expense from ExpenseForm.\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  // state to contorl what is rendered button or ExpenseForm\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // function trigger via button Add New Expense to render ExpenseForm component.\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n// DUMMY_EXPENSES token existing expenses array to which to add to NewExpenses data.\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Tinex\",\n    amount: 78,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"Car Registration\",\n    amount: 200,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Netfix Subscription\",\n    amount: 12,\n    date: new Date(2021, 4, 5),\n  },\n  {\n    id: \"e4\",\n    title: \"Vacation\",\n    amount: 800,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: \"e5\",\n    title: \"Car Repair\",\n    amount: 150,\n    date: new Date(2021, 2, 8),\n  },\n  {\n    id: \"e6\",\n    title: \"Shopping\",\n    amount: 80,\n    date: new Date(2021, 3, 7),\n  },\n  {\n    id: \"e7\",\n    title: \"Software\",\n    amount: 112,\n    date: new Date(2021, 6, 19),\n  },\n  {\n    id: \"e8\",\n    title: \"Present\",\n    amount: 90,\n    date: new Date(2020, 6, 19),\n  },\n  {\n    id: \"e9\",\n    title: \"Groceries\",\n    amount: 30,\n    date: new Date(2020, 6, 19),\n  },\n  {\n    id: \"e10\",\n    title: \"Weekend\",\n    amount: 55,\n    date: new Date(2020, 3, 12),\n  },\n  {\n    id: \"e11\",\n    title: \"Software\",\n    amount: 65,\n    date: new Date(2020, 9, 7),\n  },\n  {\n    id: \"e12\",\n    title: \"Drone parts\",\n    amount: 250,\n    date: new Date(2020, 4, 4),\n  },\n  {\n    id: \"e13\",\n    title: \"Dog food\",\n    amount: 12,\n    date: new Date(2020, 2, 19),\n  },\n  {\n    id: \"e14\",\n    title: \"Dog present\",\n    amount: 20,\n    date: new Date(2020, 2, 29),\n  },\n  {\n    id: \"e15\",\n    title: \"Weekend gathering\",\n    amount: 45,\n    date: new Date(2020, 5, 23),\n  },\n  {\n    id: \"e16\",\n    title: \"Home supllies\",\n    amount: 90,\n    date: new Date(2020, 5, 3),\n  },\n  {\n    id: \"e17\",\n    title: \"Home supllies\",\n    amount: 15,\n    date: new Date(2021, 1, 3),\n  },\n  {\n    id: \"e18\",\n    title: \"Canon battery\",\n    amount: 80,\n    date: new Date(2021, 1, 7),\n  },\n  {\n    id: \"e19\",\n    title: \"Home supllies\",\n    amount: 150,\n    date: new Date(2021, 2, 9),\n  },\n  {\n    id: \"e20\",\n    title: \"Tinex\",\n    amount: 59,\n    date: new Date(2021, 2, 14),\n  },\n  {\n    id: \"e21\",\n    title: \"Udemy course\",\n    amount: 90,\n    date: new Date(2021, 2, 24),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  // adding a new item to the DUMMY array\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // Data recieved bottom to up from ExpenseForm --> NewExpense --> App\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses item={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}